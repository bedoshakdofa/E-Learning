// <auto-generated />
using System;
using E_Learning.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace E_Learning.Migrations
{
    [DbContext(typeof(DbContextApp))]
    [Migration("20241207000200_full-Database")]
    partial class fullDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("E_Learning.Data.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Course_Description")
                        .HasColumnType("text");

                    b.Property<string>("Course_Name")
                        .HasColumnType("text");

                    b.Property<int>("Dept_Id_FK")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Dept_Id_FK");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Department", b =>
                {
                    b.Property<int>("Dept_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Dept_Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Dept_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Enrollment", b =>
                {
                    b.Property<int>("Course_ID")
                        .HasColumnType("integer");

                    b.Property<string>("User_ID")
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Course_ID", "User_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Course_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Lec_Name")
                        .HasColumnType("text");

                    b.Property<string>("Lec_PDF")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Course_ID");

                    b.ToTable("lectures");
                });

            modelBuilder.Entity("E_Learning.Data.Model.User", b =>
                {
                    b.Property<string>("SSN")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<int?>("Dept_id")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<byte[]>("password")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.HasKey("SSN");

                    b.HasIndex("Dept_id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Course", b =>
                {
                    b.HasOne("E_Learning.Data.Model.Department", "department")
                        .WithMany("courses")
                        .HasForeignKey("Dept_Id_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Enrollment", b =>
                {
                    b.HasOne("E_Learning.Data.Model.Course", "Course")
                        .WithMany("enrollment")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning.Data.Model.User", "user")
                        .WithMany("Enrollment")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Lecture", b =>
                {
                    b.HasOne("E_Learning.Data.Model.Course", "Course")
                        .WithMany("Lecture")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("E_Learning.Data.Model.User", b =>
                {
                    b.HasOne("E_Learning.Data.Model.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("Dept_id");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Course", b =>
                {
                    b.Navigation("Lecture");

                    b.Navigation("enrollment");
                });

            modelBuilder.Entity("E_Learning.Data.Model.Department", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("courses");
                });

            modelBuilder.Entity("E_Learning.Data.Model.User", b =>
                {
                    b.Navigation("Enrollment");
                });
#pragma warning restore 612, 618
        }
    }
}
